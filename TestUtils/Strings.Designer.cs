//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TestUtils {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Strings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Strings() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("TestUtils.Strings", typeof(Strings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to actual.
        /// </summary>
        internal static string Actual {
            get {
                return ResourceManager.GetString("Actual", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Actual directory &apos;{0}&apos; does not exist. {1}.
        /// </summary>
        internal static string DirectoryAssert_ActualDirectoryNotFound {
            get {
                return ResourceManager.GetString("DirectoryAssert_ActualDirectoryNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected directory &apos;{0}&apos; does not exist. {1}.
        /// </summary>
        internal static string DirectoryAssert_ExpectedDirectoryNotFound {
            get {
                return ResourceManager.GetString("DirectoryAssert_ExpectedDirectoryNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DirectoryAssert.AreEqual failed. Comparing {0} with {1} - {1} contains additional subdirectory &apos;{2}&apos;.
        /// </summary>
        internal static string DirectoryAssert_ExtraDirectory {
            get {
                return ResourceManager.GetString("DirectoryAssert_ExtraDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DirectoryAssert.AreEqual failed. Comparing {0} with {1} - {1} contains additional file &apos;{2}&apos;.
        /// </summary>
        internal static string DirectoryAssert_ExtraFile {
            get {
                return ResourceManager.GetString("DirectoryAssert_ExtraFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DirectoryAssert.AreEqual failed. Comparing {0} with {1} - {1} is missing subdirectory &apos;{2}&apos;.
        /// </summary>
        internal static string DirectoryAssert_MissingDirectory {
            get {
                return ResourceManager.GetString("DirectoryAssert_MissingDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DirectoryAssert.AreEqual failed. Comparing {0} with {1} - {1} is missing file &apos;{2}&apos;.
        /// </summary>
        internal static string DirectoryAssert_MissingFile {
            get {
                return ResourceManager.GetString("DirectoryAssert_MissingFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to expected.
        /// </summary>
        internal static string Expected {
            get {
                return ResourceManager.GetString("Expected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to - File 1: {0}, File 2: EOF.
        /// </summary>
        internal static string FileAssert_ActualEmpty {
            get {
                return ResourceManager.GetString("FileAssert_ActualEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Actual file not found: &apos;{0}&apos; {1}.
        /// </summary>
        internal static string FileAssert_ActualFileNotFound {
            get {
                return ResourceManager.GetString("FileAssert_ActualFileNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to , char {0} - .
        /// </summary>
        internal static string FileAssert_CharPosition {
            get {
                return ResourceManager.GetString("FileAssert_CharPosition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *.
        /// </summary>
        internal static string FileAssert_DifferenceIndicator {
            get {
                return ResourceManager.GetString("FileAssert_DifferenceIndicator", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to \EOL.
        /// </summary>
        internal static string FileAssert_EOL {
            get {
                return ResourceManager.GetString("FileAssert_EOL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to - File 1: EOF, File 2: {0}.
        /// </summary>
        internal static string FileAssert_ExpectedEmpty {
            get {
                return ResourceManager.GetString("FileAssert_ExpectedEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected file not found: &apos;{0}&apos; {1}.
        /// </summary>
        internal static string FileAssert_ExpectedFileNotFound {
            get {
                return ResourceManager.GetString("FileAssert_ExpectedFileNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File 1: &apos;{0}&apos;, File 2: &apos;{1}&apos;.
        /// </summary>
        internal static string FileAssert_FilesDiffer {
            get {
                return ResourceManager.GetString("FileAssert_FilesDiffer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} failed. Comparing {1} ({2} bytes) with {3} ({4} bytes) - Files differ at line {5}.
        /// </summary>
        internal static string FileAssert_LinePosition {
            get {
                return ResourceManager.GetString("FileAssert_LinePosition", resourceCulture);
            }
        }
    }
}
